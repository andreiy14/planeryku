import { useEffect, useState } from "react";
import { planeryku_project_backend } from "../../../declarations/planeryku_project_backend";


const defaultListCategory = [
  "Open",
  "In Progress",
  "Ready to Test",
  "Completed",
];

const useProject = () => {
  const [project, setProject] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

    




  const getListProject = async () => {
    try {
      setLoading(true);
      const responseData = await   planeryku_project_backend.getProjects();


      console.log("responseData", responseData);
      setProject(responseData);
    } catch (error) {
      console.log("error", error);
    } finally{
      setLoading(false);
    }

  };

  const getDetailProject = async (id) => {
    try {
      setLoading(true);
      const responseData = await   planeryku_project_backend.getDetailProject(id);
      console.log("responseData", responseData);
      // setProject(responseData);
    } catch (error) {
      console.log("error", error);
    } finally{
      setLoading(false);
    }
  };
  



  const addProject = async (data) => {
    try {
      setLoading(true);
      const dataSubmit = {
        ...data,
        status : "", // TODO
        description : "", // TODO 
        startDate : new Date().toISOString(),
        endDate : "", // TODO 
        id : "", // generated by backend,
        listStatus : defaultListCategory,

      };
      await   planeryku_project_backend.addProject(dataSubmit);

      await getListProject();
    }catch (error) {
      setError(error);
      console.log("error", error);
    } finally{
      setLoading(false);
    }
  };
  useEffect(() => {
    getListProject();
  }, []);
  
  return {
    project,
    setProject,
    loading,
    error,
    addProject,
    getDetailProject,
  };
};


export default useProject;